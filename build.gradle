apply plugin: 'groovy'
apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'jacoco'
apply plugin: 'br.com.zgsolucoes.semantic-release'


configurations.all {
    resolutionStrategy.cacheDynamicVersionsFor 5 * 60, 'seconds' // 5 minutos
    resolutionStrategy.cacheChangingModulesFor 5 * 60, 'seconds' // 5 minutos
}

uploadArchives {
    repositories.mavenDeployer {
        repository(url: "$artifactory_contextUrl/libs-release-local/") {
            authentication(userName: artifactory_user, password: artifactory_password)
        }
        snapshotRepository(url: "$artifactory_contextUrl/libs-snapshot-local/") {
            authentication(userName: artifactory_user, password: artifactory_password)
        }
    }
}

buildscript {
    repositories {
        mavenCentral()
        mavenLocal()
        maven {
            url "$artifactory_contextUrl/libs-release/"
            credentials {
                username = artifactory_user
                password = artifactory_password
            }
        }
    }
    dependencies {
        classpath "br.com.zgsolucoes.plugins:zg-gradle-plugins:1.1.3"
    }
}

repositories {
    mavenCentral()
    mavenLocal()
    maven {
        url "$artifactory_contextUrl/libs-release/"
        credentials {
            username = artifactory_user
            password = artifactory_password
        }
    }
}

configurations {
	compile {
		exclude group: 'org.codehaus.groovy', module: 'groovy'
	}
}

dependencies {
    compile 'org.codehaus.groovy:groovy-all:2.0.8'

    compile('org.springframework.session:spring-session-data-redis:2.1.9.RELEASE') {
        exclude module: 'spring-context'
        exclude module: 'spring-context-support'
        exclude module: 'spring-aop'
        exclude module: 'spring-core'
        exclude module: 'spring-tx'
    }

    compile('org.springframework.security:spring-security-core:5.1.6.RELEASE') {
        exclude module: 'spring-context'
        exclude module: 'spring-context-support'
        exclude module: 'spring-aop'
        exclude module: 'spring-core'
        exclude module: 'spring-tx'
        exclude module: 'spring-expression'
    }
    compile ('org.springframework.security:spring-security-web:5.1.6.RELEASE') {
        exclude module: 'spring-web'
        exclude module: 'spring-core'
        exclude module: 'spring-security-core'
    }

    compile ('org.springframework:spring-web:5.1.6.RELEASE'){
        exclude module: 'spring-context'
    }

    compile 'javax.servlet:javax.servlet-api:3.0.1'
    compile 'commons-lang:commons-lang:2.6'

    testCompile('org.spockframework:spock-core:1.1-groovy-2.0'){
        exclude module: 'groovy-all'
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives sourcesJar
}

task uploadRelease(dependsOn: uploadArchives) {

}

release {
    tagStrategy {
        prefixNameWithV = false
    }
}

sourceSets.main.java.srcDirs = []
sourceSets.main.groovy.srcDirs += ["src/main/java"]
